# Does also set names of ~/.$(BIN)rc and ~/.$(BIN)info to allow parallel
# installation of different tool versions.

BIN = vddiff
TEST_BIN = test
PREFIX = /usr/local
BINDIR = $(PREFIX)/bin
MANDIR = $(PREFIX)/share/man
INCDIR = $(PREFIX)/include
LIBDIR = $(PREFIX)/lib
TEST_DIR = .TMP_TEST_DIR

TRACE = #-DTRACE='"/tmp/.$(BIN)_trace_"'
DEBUG = #-DDEBUG #-std=c99 -D_XOPEN_SOURCE=700 #-DUNIMP
STRP  = -s

OBJ = \
	main.o pars.o lex.o diff.o ui.o db.o exec.o fs.o ed.o uzp.o \
	ui2.o gq.o tc.o info.o dl.o cplt.o misc.o format_time.o \
	unit_prefix.o abs2relPath.o
TEST_OBJ = $(OBJ) test.o fs_test.o misc_test.o abs2relPathTest.o
YFLAGS = -d
_CFLAGS = \
	$(CFLAGS) $(CPPFLAGS) $(DEFINES) $(__CDBG) $(__CLDBG) \
	-I$(INCDIR) \
	$(INCDIR_CURSES) \
	$(TRACE) \
	$(DEBUG) \
	-DBIN='"$(BIN)"'
_CXXFLAGS = \
	$(CXXFLAGS) $(__CXXDBG) $(__CLXXDBG) -std=c++17 \
	$(TRACE) -DTEST_DIR='"$(TEST_DIR)"'
_LDFLAGS = \
	$(LDFLAGS) $(__CLDBG) $(STRP) \
	-L${LIBDIR} -Wl,-rpath,${LIBDIR} \
	$(RPATH_CURSES) $(LIBDIR_CURSES)
LDADD = $(LIB_AVLBST) $(LIB_CURSES)

all: $(BIN) $(BIN).1.out

install: $(BINDIR) $(MANDIR)/man1
	install $(BIN) $(BINDIR)/
	install -m 644 $(BIN).1.out $(MANDIR)/man1/$(BIN).1

uninstall:
	rm -f $(BINDIR)/$(BIN)
	rm -f $(MANDIR)/man1/$(BIN).1

clean:
	rm -f $(BIN) $(TEST_OBJ) y.tab.? *.1.html *.1.pdf \
	    /tmp/.$(BIN).err /tmp/.$(BIN).toc *.gc?? *.1.out lex.yy.c \
		$(TEST_BIN)
	rm -rf $(TEST_DIR)

distclean: clean
	rm -f Makefile config.log compat.h

$(BINDIR) $(MANDIR)/man1:
	mkdir -p $@

$(BIN): $(OBJ)
	$(CC) $(_CFLAGS) $(_LDFLAGS) -o $@ $(OBJ) $(LDADD)

# $(TEST_BIN) is intented for development purposes only. Don't use it!
# Unit test is started with:
#
#   $ ./configure -DTEST
#   $ make test
#   $ ./test
#   $ echo $?
#
# Applies file tree delete operations!
# May recursively delete any accessible local and remote file and directory
# in case of a software bug!
#
# Temporarily copies project directory to /tmp.
# Uses rlcmp(1) to compare symbolic links (not possible with POSIX diff(1)).

$(TEST_BIN): $(TEST_OBJ)
	$(CXX) $(_CFLAGS) $(_LDFLAGS) -o $@ $(TEST_OBJ) $(LDADD)

.y.o:
	$(YACC) $(YFLAGS) $<
	$(CC) $(_CFLAGS) -c y.tab.c -o $@
	rm y.tab.c

.l.o:
	$(LEX) $<
	$(CC) $(_CFLAGS) -c lex.yy.c -o $@
	rm -f lex.yy.c

.c.o:
	$(CC) $(_CFLAGS) -c $<

.cpp.o:
	$(CXX) $(_CXXFLAGS) -c $<

$(BIN).1.out: vddiff.1
	UCBIN=`echo $(BIN)|tr '[:lower:]' '[:upper:]'`; \
	sed -e '/^\.begin_comment/,/^\.end_comment/d' \
	    -e "s/VDDIFF/$$UCBIN/g" \
	    -e 's/@vddiff@/$(BIN)/g' vddiff.1 > $@

html:
	make $(BIN).1.html

pdf:
	make $(BIN).1.pdf

$(BIN).1.html: $(BIN).1.out
	tbl $(BIN).1.out | eqn | troff -Thtml -mandoc -dToc=/tmp/.$(BIN).toc \
	    2> /tmp/.$(BIN).err | dhtml -t "$(BIN)(1)" > $@
	sed -n 's/^Toc://p' /tmp/.$(BIN).err > /tmp/.$(BIN).toc
	tbl $(BIN).1.out | eqn | troff -Thtml -mandoc -dToc=/tmp/.$(BIN).toc \
	    2> /tmp/.$(BIN).err | dhtml -t "$(BIN)(1)" > $@
	sed -n 's/^Toc://p' /tmp/.$(BIN).err > /tmp/.$(BIN).toc
	tbl $(BIN).1.out | eqn | troff -Thtml -mandoc -dToc=/tmp/.$(BIN).toc \
	    2> /tmp/err | dhtml -t "$(BIN)(1)" > $@

$(BIN).1.pdf: $(BIN).1.out
	tbl -g $(BIN).1.out | eqn | troff -mandoc -dToc=/tmp/.$(BIN).toc \
	    2> /tmp/.$(BIN).err | dpost | ps2pdf - $@
	sed -n 's/^Toc://p' /tmp/.$(BIN).err > /tmp/.$(BIN).toc
	tbl -g $(BIN).1.out | eqn | troff -mandoc -dToc=/tmp/.$(BIN).toc \
	    2> /tmp/.$(BIN).err | dpost | ps2pdf - $@
	sed -n 's/^Toc://p' /tmp/.$(BIN).err > /tmp/.$(BIN).toc
	tbl -g $(BIN).1.out | eqn | troff -mandoc -dToc=/tmp/.$(BIN).toc \
	    2> /tmp/.$(BIN).err | dpost | ps2pdf - $@

main.o: pars.o # y.tab.h
lex.o: pars.o # y.tab.h
